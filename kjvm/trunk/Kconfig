#
# JEM configuration
#
menu "Java Virtual Machine (Jem)"

config JEM
	tristate "Kernel-based Java Virtual Machine (Jem) support"
	depends on EXPERIMENTAL
	---help---
	  Jem is a java virtual machine (JVM) that runs in the kernel. It
	  is intended for embedded java applications. You will also
	  need the JEM JDK which includes the source files for the java
	  classes that you can build your embedded java application on
	  top of.

	  To compile this as a module, choose M here: the module
	  will be called jemjvm.

	  If unsure, say N.

config JEM_CODE_FRAGMENTS
	int "Maximum number of code fragments per domain"
	default 30 
	depends on JEM
	---help---
	  Amount of space to allocate for code storage. Code space is allocated
	  in 512K chunks. This variable controls the maximum number of chunks,
	  and thus the maximum amount of code space for a domain.

config JEM_MAX_SERVICES
	int "Maximum number of services per domain"
	default 1500 
	depends on JEM
	---help---
	  Maximum number of services that can be created in a domain

config JEM_PROFILE
	bool "Add profiler support."
	depends on JEM
	---help---
	  Compile in support for profiler statistics.	  .

config JEM_ENABLE_GC
	bool "Enable garbage collector support."
	depends on JEM
	default true
	---help---
	  Compile in support for the garbage collector. The default collector is a 
	  copying collector, which means that garbage collection consists of 
	  allocating a new heap and copying referenced objects to the new heap. 
	  This method requires double the heap memory for a domain while the
	  gc is operating. There are other GC algorithms (below) that can be 
	  compiled in and selected for the domain in the boot.rc file.

config JEM_DYNAMIC_HEAP
	bool "Dynamic heap allocation."
	depends on JEM_ENABLE_GC
	default false
	---help---
	  The default collector is a copying collector, which means that 
	  garbage collection consists of allocating a new heap and copying 
	  referenced objects to the new heap. This configuration item
	  controls when the second heap is allocated. If this item is set
	  on the second heap will be allocated when the garbage collection
	  runs and is freed when garbage collection is done, i.e., it is 
	  dynamic allocation. If this item is set off, the second heap 
	  is allocated at initialization time, and is never freed.

config JEM_COMPACTING_GC
	bool "Enable compacting garbage collector support."
	depends on JEM_ENABLE_GC
	default false
	---help---
	  Compile in support for the compacting garbage collector. The boot.rc
	  file must indicate which domains will use this GC, otherwise the 
	  default copying collector will be used.

config JEM_BITMAP_GC
	bool "Enable bitmap garbage collector support."
	depends on JEM_ENABLE_GC
	default false
	---help---
	  Compile in support for the bitmap garbage collector.

endmenu
