<?xml version="1.0" encoding="UTF-8"?>
<!--
//==============================================================================
// This file is part of Jem, a real time Java operating system designed for
// embedded systems.
//
// Copyright (C) 2007 Christopher Stone. 
//
// Jem is free software; you can redistribute it and/or modify it under the
// terms of the GNU General Public License, version 2, as published by the Free
// Software Foundation.
//
// Jem is distributed in the hope that it will be useful, but WITHOUT ANY
// WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR
// A PARTICULAR PURPOSE. See the GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License along with
// Jem; if not, write to the Free Software Foundation, Inc., 51 Franklin Street,
// Fifth Floor, Boston, MA 02110-1301, USA
//
//==============================================================================
-->

<ax:aspect xmlns:ax="http://control.ee.ethz.ch/XWeaver/AspectX" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:java="http://www.sdml.info/srcML/java" xmlns:src="http://www.sdml.info/srcML/src" xmlns:util="http://www.pnp-software.com/util" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="XenoRTDMLock">
  <ax:description>This aspect implements resource locking using the Xenomai
RTDM API. Implementing resource locking in an aspect allows
the API to be changed.</ax:description>
  <ax:include href="FunctionPointcuts.ax"/>
  <ax:include href="UnitPointcuts.ax"/>


  <ax:advice name="Advice_1" type="replace">
    <ax:description>Add lock variables to the DomainDesc_s struct.</ax:description>
    <ax:pointcut constraint="contains(.,'@aspect struct DomainDesc_s')" type="src:comment">
      <ax:restriction type="within">
        <ax:pointcutRef aspect="UnitPointcuts" ref="domain_h" type="src:unit"/>
      </ax:restriction>
    </ax:pointcut>
    <ax:codeModifier type="codeFragment">
      <ax:text>rtdm_sem_t                  serviceSem;
rtdm_mutex_t                domainMemLock;
rtdm_mutex_t                domainHeapLock;</ax:text>
    </ax:codeModifier>
  </ax:advice>


  <ax:advice name="Advice_2" type="replace">
    <ax:description>Add lock variables to the DomainDesc_s struct.</ax:description>
    <ax:pointcut constraint="contains(.,'@aspect struct GCDesc_s')" type="src:comment">
      <ax:restriction type="within">
        <ax:pointcutRef aspect="UnitPointcuts" ref="domain_h" type="src:unit"/>
      </ax:restriction>
    </ax:pointcut>
    <ax:codeModifier type="codeFragment">
      <ax:text>rtdm_mutex_t                gcLock;</ax:text>
    </ax:codeModifier>
  </ax:advice>


  <ax:advice name="Advice_3" type="replace">
    <ax:description>Add rtdm include to source.</ax:description>
    <ax:pointcut type="src:comment">
      <ax:or>
        <ax:pointcut constraint="contains(.,'@aspect include')" type="src:comment">
          <ax:or>
            <ax:restriction type="within">
              <ax:pointcutRef aspect="UnitPointcuts" ref="domain_h" type="src:unit"/>
            </ax:restriction>
            <ax:restriction type="within">
              <ax:pointcutRef aspect="UnitPointcuts" ref="portal_h" type="src:unit"/>
            </ax:restriction>
          </ax:or>
        </ax:pointcut>
      </ax:or>
    </ax:pointcut>
    <ax:codeModifier type="codeFragment">
      <ax:text>#include &lt;rtdm/rtdm_driver.h&gt;</ax:text>
    </ax:codeModifier>
  </ax:advice>


  <ax:advice name="Advice_4" type="replace">
    <ax:description>Insert mutex lock.</ax:description>
    <ax:pointcut constraint="contains(.,'@aspect Lock')" type="src:comment">
      <ax:restriction type="within">
        <ax:pointcutRef aspect="FunctionPointcuts" ref="jemMallocCode" type="src:function"/>
      </ax:restriction>
    </ax:pointcut>
    <ax:codeModifier type="codeFragment">
      <ax:text>rtdm_mutex_lock(&amp;domain->domainMemLock);</ax:text>
    </ax:codeModifier>
  </ax:advice>


  <ax:advice name="Advice_5" type="before">
    <ax:description>Insert mutex unlock.</ax:description>
    <ax:pointcut type="src:return">
      <ax:restriction type="within">
        <ax:pointcutRef aspect="FunctionPointcuts" ref="jemMallocCode" type="src:function"/>
      </ax:restriction>
    </ax:pointcut>
    <ax:codeModifier type="codeFragment">
      <ax:text>rtdm_mutex_unlock(&amp;domain->domainMemLock);</ax:text>
    </ax:codeModifier>
  </ax:advice>


  <ax:advice name="Advice_6" type="replace">
    <ax:description>Add lock variables to the ServiceThreadPool_s struct.</ax:description>
    <ax:pointcut constraint="contains(.,'@aspect struct ServiceThreadPool_s')" type="src:comment">
      <ax:restriction type="within">
        <ax:pointcutRef aspect="UnitPointcuts" ref="portal_h" type="src:unit"/>
      </ax:restriction>
    </ax:pointcut>
    <ax:codeModifier type="codeFragment">
      <ax:text>rtdm_mutex_t        poolLock;</ax:text>
    </ax:codeModifier>
  </ax:advice>


</ax:aspect>